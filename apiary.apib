FORMAT: 1A

# Tagallery
Tagallery is a tag-based web gallery.

# API
All calls require a token to be accepted.

## Token [/token]
The token has no expiration time and can be be used as long as the user wants.
Once a new token is requested, any previous token assigned to the user will be
invalidated.

### Request an access token [POST]
+ Request (application/json)

        { "username": "username", "password": "password" }
        
+ Response 200 (application/json)

        {
            "meta": { "status": "OK" },
            "data": {
                "token": "accesstoken"
            }
        }
        
+ Response 404 (application/json)

        {
            "meta": { "status": "ERROR",
                      "code": "UNKNONW_USER",
                      "message": "Invalid user or password" }
        }

## Tags [/tags]
### Get all tags [GET]
+ Request (application/json)

    + Header
    
            X-Tagallery-Token: accesstoken
        

+ Response 200 (application/json)

        {
            "meta": {"status": "OK" },
            "data": [
                { "id": 1, "jpg" },
                { "id": 2, "gif" }
            ]
        }

### Create a Note [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

## Note [/notes/{id}]
A single Note object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a Note [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }

### Remove a Note [DELETE]
+ Response 204
