swagger: '2.0'
info:
  title: Tagallery
  description: Tag based image gallery.
  version: 1.0.0
schemes:
  - http
  - https
basePath: /v1
produces:
  - application/json
paths:
  /tags:
    get:
      summary: List of tags
      description: Return the list of tags in the system
      parameters:
        - name: filter
          in: query
          description: Return tags that start with the string.
          required: false
          type: string
      tags:
        - Tags
      responses:
        '200':
          description: List of tags
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
    post:
      summary: Create a new tag.
      description: Creates a new tag and return its ID.
      parameters:
        - name: name
          in: body
          description: The name of the tag.
          required: true
          schema:
            type: string
      tags:
        - Tags
      responses:
        '200':
          description: Tag was created.
          schema:
            $ref: '#/definitions/Tag'
  '/tags/{id}':
    get:
      summary: Retrieve a tag.
      description: Retrieve the information of a single tag.
      parameters:
        - name: id
          in: path
          description: ID of the tag to be retrieved.
          required: true
          type: number
      tags:
        - Tags
      responses:
        '200':
          description: Tag information.
          schema:
            $ref: '#/definitions/Tag'
        '400':
          description: "Tag doesn't exist."
    put:
      summary: Update a tag.
      description: Update the information of a tag.
      parameters:
        - name: id
          in: path
          description: ID of the tag to be changed.
          required: true
          type: number
        - name: name
          in: body
          description: New description of the tag.
          required: true
          schema:
            type: string
      tags:
        - Tags
      responses:
        '200':
          description: New tag information.
          schema:
            $ref: '#/definitions/Tag'
        '400':
          description: "Tag doesn't exist."
    delete:
      summary: Delete a tag.
      description: "Deletes a tag from the system. \nImages associated with the tag are not changed.\n"
      parameters:
        - name: id
          in: path
          description: ID of the tag to be removed.
          required: true
          type: number
      tags:
        - Tags
      responses:
        '200':
          description: Tag deleted.
        '400':
          description: "Tag doesn't exist."
  /images:
    get:
      summary: Retrieve the list of images.
      description: |
        Retrieves the list of images in the server.
      parameters:
        - name: count
          in: query
          description: Number of images to be returned.
          required: true
          type: number
        - name: starting
          in: query
          description: Starting image.
          required: false
          type: number
        - name: tags
          in: query
          description: Show images that contain only those tags.
          required: false
          type: array
          items:
            type: integer
      tags:
        - Images
      responses:
        '200':
          description: List of images
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
    post:
      summary: Add a new image.
      description: |
        Upload a new image to the system.
      parameters:
        - name: image
          in: formData
          description: The image.
          required: true
          type: file
        - name: title
          in: formData
          description: Title for the image
          required: false
          type: string
        - name: tags
          in: formData
          description: IDs of the tags for the image
          required: true
          type: array
          items:
            type: integer
      tags:
        - Images
      responses:
        '200':
          description: Image upload successful.
          schema:
            $ref: '#/definitions/Image'
  '/images/{image_id}':
    get:
      summary: Retrieve the information of a single image.
      description: |
        Return the information about a whole image.
      parameters:
        - name: image_id
          in: path
          description: The ID of the image
          required: true
          type: integer
      tags:
        - Images
      responses:
        '200':
          description: Information about the image.
          schema:
            $ref: '#/definitions/Image'
        '400':
          description: Image does not exist
    put:
      summary: Update image information
      description: |
        Change the information about an image.
      parameters:
        - name: image_id
          in: path
          description: The ID of the image
          required: true
          type: integer
        - name: title
          in: formData
          description: |
            New title for the image; if not sent, the original
            title is kept.
          required: false
          type: string
        - name: tags
          in: formData
          description: |
            New tags for the image; the whole list is replaced
            if sent.
          required: false
          type: array
          items:
            type: integer
      tags:
        - Images
      responses:
        '200':
          description: Image information updated
          schema:
            $ref: '#/definitions/Image'
        '400':
          description: Image does not exist.
        '406':
          description: One or more tags IDs are invalid
          schema:
            type: array
            items:
              type: integer
  /incoming:
    get:
      summary: List of images in the incoming directory.
      description: |
        The "Incoming" folder holds images that the user uploaded
        to a configured path in the server. This call will return
        the list of files in that folder.

        Note that the images do not have a thumbnail and the image
        URL points to the full image.
      tags:
        - Images
        - Incoming
      responses:
        '200':
          description: List of files.
          schema:
            type: array
            items:
              $ref: '#/definitions/Incoming'
  '/incoming/{filename}':
    delete:
      summary: Remove an image from the incoming directory.
      description: |
        Removes an image in the incoming directory. Note that
        nothing else is done, the image is simply removed from
        the server and nothing else is done.
      tags:
        - Images
        - Incoming
      parameters:
        - name: filename
          in: path
          description: Name of the file to be removed
          required: true
          type: string
      responses:
        '200':
          description: File removed successfully.
        '400':
          description: File does not exist in the server anymore.
        '403':
          description: |
            File exists, but filesystem permissions do not allow
            it to be removed. User intervention in the server is
            required.
    put:
      summary: Move an image from the incoming to the database
      description: |
        Adds information for the image, moving it from the incoming
        directory to the database.
      tags:
        - Images
        - Incoming
      parameters:
        - name: filename
          in: path
          description: Name of the file to be moved
          required: true
          type: string
        - name: title
          in: formData
          description: The title for the image
          required: false
          type: string
        - name: tags
          in: formData
          description: The tags for the image
          required: true
          type: array
          items:
            type: integer
      responses:
        '200':
          description: File removed from incoming and added to the database
          schema:
            $ref: '#/definitions/Image'
        '400':
          description: File does not exist
        '406':
          description: |
            The file was added to the database, but couldn't be removed
            from the incoming directory due filesystem permissions.
          
definitions:
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  Incoming:
    type: object
    properties:
      filename:
        type: string
      url:
        type: string
  Image:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      url:
        type: string
      thumbnail:
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
